/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2563-06-22 05:40:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import io.muzoo.ooc.webapp.basic.database.MySQLJava;
import java.sql.ResultSet;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("io.muzoo.ooc.webapp.basic.database.MySQLJava");
    _jspx_imports_classes.add("java.sql.ResultSet");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<title>Home Page</title>\r\n");
      out.write("<body>\r\n");
      out.write("<p>\r\n");
      out.write("<h1>Home</h1>\r\n");
      out.write("<hr>\r\n");
      out.write("<h2>\r\n");
      out.write("    Hello ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("</h2>\r\n");
      out.write("<a class=\"nav-link\" href=\"/register\">Register</a><br>\r\n");
      out.write("<a class=\"nav-link\" href=\"/logout\">Logout</a><br>\r\n");
      out.write("<br>\r\n");
      out.write("<style>\r\n");
      out.write("    table, th, td {\r\n");
      out.write("        border: 1px solid black;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <table>\r\n");
      out.write("        <thead>\r\n");
      out.write("        <h4>Users Table</h4>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <th>ID</th>\r\n");
      out.write("            <th>Username</th>\r\n");
      out.write("            <th>Name</th>\r\n");
      out.write("        </tr>\r\n");
      out.write("        </thead>\r\n");
      out.write("        <tbody>");

            ResultSet rs = MySQLJava.getInstance().getUsersData();
            while (rs.next()) {
                try {
                    String usernameEntry = rs.getString("username");
                    String nameEntry = rs.getString("name");
                    int idEntry = rs.getInt("id");
        
      out.write("\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>");
      out.print( idEntry );
      out.write("\r\n");
      out.write("            </td>\r\n");
      out.write("            <td>");
      out.print( usernameEntry );
      out.write("\r\n");
      out.write("            </td>\r\n");
      out.write("            <td>");
      out.print( nameEntry );
      out.write("\r\n");
      out.write("            </td>\r\n");
      out.write("            <td>\r\n");
      out.write("                ");
 if (idEntry != (Integer) request.getSession().getAttribute("sessionId")) { 
      out.write("\r\n");
      out.write("\r\n");
      out.write("                <div>\r\n");
      out.write("                    <form action=\"/removeuser\" method=\"post\">\r\n");
      out.write("                        <button type=\"submit\" onclick=\"return confirm('Are you sure you want to Remove ");
      out.print( nameEntry);
      out.write("?');\">Remove</button>\r\n");
      out.write("                        <input type=\"hidden\" id=\"id-to-remove\" name=\"id-to-remove\" value=\"");
      out.print( idEntry);
      out.write("\">\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </td>\r\n");
      out.write("            ");

                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            
      out.write("\r\n");
      out.write("        </tr>\r\n");
      out.write("        </tbody>\r\n");
      out.write("    </table>\r\n");
      out.write("    <br>\r\n");
      out.write("    ");

        if (request.getAttribute("message") != null) {
    
      out.write("\r\n");
      out.write("    <div>\r\n");
      out.write("        <div class=\"card-body\">\r\n");
      out.write("            ");
      out.print(request.getAttribute("message") );
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    ");

        }
    
      out.write("\r\n");
      out.write("    <div>\r\n");
      out.write("        <label><b>Edit User</b></label>\r\n");
      out.write("        <form action=\"/edituser\" method=\"post\">\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"id-edit\" class=\"col-form-label\"> id:</label>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"id-edit\" name=\"id-edit\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"username-edit\" class=\"col-form-label\"> New username:</label>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"username-edit\" name=\"username-edit\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"password-edit\" class=\"col-form-label\"> New password:</label>\r\n");
      out.write("                    <input type=\"password\" class=\"form-control\" id=\"password-edit\" name=\"password-edit\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"name-edit\" class=\"col-form-label\">New name:</label>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"name-edit\" name=\"name-edit\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <button type=\"submit\" class=\"btn btn-primary\">Edit user</button>\r\n");
      out.write("                <button type=\"reset\" value=\"Reset\">Reset</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
